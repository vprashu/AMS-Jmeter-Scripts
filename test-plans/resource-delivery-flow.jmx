<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Device Policy sync messages from PRM" enabled="true">
      <stringProp name="TestPlan.comments">PRM adds a Kafka message on the topic that AMS device sync consumer picks up and processes. Uses DI KafkaMeter plugin</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <com.tag.jmeter.ext.config.PropertyReader guiclass="TestBeanGUI" testclass="com.tag.jmeter.ext.config.PropertyReader" testname="Property File Reader" enabled="true">
        <stringProp name="propFilePath">..\jmeter.properties</stringProp>
      </com.tag.jmeter.ext.config.PropertyReader>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Kafka Producer" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">${__P(ams.devicepolicy.sync.loopcount)}</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">${__P(ams.devicepolicy.sync.devices)}</stringProp>
        <stringProp name="ThreadGroup.ramp_time">${__P(ams.devicepolicy.sync.rampup)}</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <ConstantThroughputTimer guiclass="TestBeanGUI" testclass="ConstantThroughputTimer" testname="Constant Throughput Timer" enabled="true">
          <intProp name="calcMode">3</intProp>
          <stringProp name="throughput">${__P(ams.devicepolicy.sync.requests.per.minute)}</stringProp>
        </ConstantThroughputTimer>
        <hashTree/>
        <com.di.jmeter.kafka.config.KafkaProducerConfig guiclass="TestBeanGUI" testclass="com.di.jmeter.kafka.config.KafkaProducerConfig" testname="KafkaProducerConfig" enabled="true">
          <stringProp name="batchSize">16384</stringProp>
          <stringProp name="clientId">Jmeter-Producer-1</stringProp>
          <collectionProp name="extraConfigs"/>
          <boolProp name="isSsl">false</boolProp>
          <stringProp name="kafkaBrokers">${__P(kafka.host.url)}</stringProp>
          <stringProp name="kafkaSslKeystore"></stringProp>
          <stringProp name="kafkaSslKeystorePassword">Chang3M3</stringProp>
          <stringProp name="kafkaSslTruststore"></stringProp>
          <stringProp name="kafkaSslTruststorePassword">Chang3M3</stringProp>
          <stringProp name="serializerKey">org.apache.kafka.common.serialization.StringSerializer</stringProp>
          <stringProp name="serializerValue">org.apache.kafka.common.serialization.StringSerializer</stringProp>
          <stringProp name="TestPlan.comments">Kafka Producer Configuration. Configuration read form a file jmeter.properties</stringProp>
        </com.di.jmeter.kafka.config.KafkaProducerConfig>
        <hashTree/>
        <com.di.jmeter.kafka.sampler.KafkaProducerSampler guiclass="TestBeanGUI" testclass="com.di.jmeter.kafka.sampler.KafkaProducerSampler" testname="KafkaProducerSampler" enabled="true">
          <stringProp name="kafkaMessage">{
    &quot;actions&quot;: [
      {
        &quot;resource_uuid&quot;: &quot;5dbd7c8f-47e3-45a0-9bd5-0b44e21edfd0&quot;,
        &quot;resource_type&quot;: &quot;PROFILES&quot;,
        &quot;action&quot;: &quot;INSTALL&quot;,
        &quot;action_uuid&quot;: &quot;3741fae6-56c3-4cb8-bbd2-8e84394a938c&quot;,
        &quot;payload_data&quot;: {
          &quot;publish_time&quot;: &quot;2021-10-27T20:07:58.886388+00:00&quot;,
          &quot;payloads&quot;: {
            &quot;uuid&quot;: &quot;5dbd7c8f-47e3-45a0-9bd5-0b44e21edfd0&quot;,
            &quot;publish_time&quot;: &quot;2021-10-27T20:07:58.886388+00:00&quot;,
            &quot;AndroidForWorkRestrictions&quot;: {
              &quot;allowUSBDebugging&quot;: &quot;true&quot;,
              &quot;allowAccountChanges&quot;: &quot;False&quot;,
              &quot;allowKeyguardFingerprint&quot;: &quot;True&quot;,
              &quot;allowKeyguardTrustAgent&quot;: &quot;True&quot;,
              &quot;allowKeyguardUnredacted&quot;: &quot;True&quot;,
              &quot;allowNonGoogleAccounts&quot;: &quot;False&quot;,
              &quot;allowCamera&quot;: &quot;True&quot;,
              &quot;allowGooglePlay&quot;: &quot;True&quot;,
              &quot;allowChrome&quot;: &quot;True&quot;,
              &quot;allowInstallingApps&quot;: &quot;True&quot;,
              &quot;allowDisableAppVerify&quot;: &quot;False&quot;,
              &quot;whitelistPermittedAccessibilityServices&quot;: &quot;False&quot;,
              &quot;allowContacts&quot;: &quot;True&quot;,
              &quot;allowNFC&quot;: &quot;False&quot;,
              &quot;allowWorkPersonalPaste&quot;: &quot;False&quot;,
              &quot;allowPersonalToAccessWork&quot;: &quot;False&quot;,
              &quot;allowWorkToAccessPersonal&quot;: &quot;True&quot;,
              &quot;allowPersonalShareWithWork&quot;: &quot;True&quot;,
              &quot;allowWorkShareWithPersonal&quot;: &quot;False&quot;,
              &quot;allowWorkContactsInPhone&quot;: &quot;True&quot;,
              &quot;allowBluetoothContactSharing&quot;: &quot;True&quot;,
              &quot;allowScreenCapture&quot;: &quot;True&quot;,
              &quot;SkipFirstUseHints&quot;: &quot;False&quot;,
              &quot;allowOutgoingBluetoothConnections&quot;: &quot;True&quot;,
              &quot;workAllowInstallFromUnknownSources&quot;: &quot;1&quot;,
              &quot;workAllowedAccounts&quot;: &quot;AllAccounts&quot;,
              &quot;whitelistWidgetProviders&quot;: &quot;False&quot;,
              &quot;allowUninstallingApps&quot;: &quot;True&quot;,
              &quot;workRestrictInputMethods&quot;: &quot;False&quot;,
              &quot;workAllowAutofill&quot;: &quot;True&quot;,
              &quot;allowTimeOffForManagedProfile&quot;: &quot;False&quot;,
              &quot;workAllowConfigLocation&quot;: &quot;True&quot;,
              &quot;restrictKeyboardOrInputPackages&quot;: &quot;False&quot;
            },
            &quot;AndroidForWorkPasscode&quot;: {
              &quot;Applications&quot;: {
                &quot;AfwAppPasscodeChangeAlert&quot;: &quot;0&quot;,
                &quot;MinimumPasscodeLength&quot;: &quot;4&quot;,
                &quot;PasscodeContent&quot;: &quot;131072&quot;,
                &quot;OneLock&quot;: &quot;True&quot;,
                &quot;EnableWorkPasscodePolicy&quot;: &quot;True&quot;,
                &quot;EnableBiometricOptions&quot;: &quot;True&quot;,
                &quot;EnableFaceScanning&quot;: &quot;True&quot;,
                &quot;EnableFingerprintSensor&quot;: &quot;True&quot;,
                &quot;EnableIrisScanning&quot;: &quot;True&quot;,
                &quot;allowForgotPasswordButton&quot;: &quot;True&quot;
              },
              &quot;Device&quot;: {
                &quot;EnableDevicePasscodePolicy&quot;: &quot;True&quot;,
                &quot;PasscodeChangeAlert&quot;: &quot;0&quot;,
                &quot;predefinePasscode&quot;: &quot;False&quot;,
                &quot;MinimumPasscodeLength&quot;: &quot;4&quot;,
                &quot;PasscodeContent&quot;: &quot;131072&quot;,
                &quot;EnableBiometricOptions&quot;: &quot;True&quot;,
                &quot;EnableFaceScanning&quot;: &quot;True&quot;,
                &quot;EnableFingerprintSensor&quot;: &quot;True&quot;,
                &quot;EnableIrisScanning&quot;: &quot;True&quot;,
                &quot;AllowPinAtStartup&quot;: &quot;False&quot;
              }
            }
          }
        }
      }
    ],
    &quot;CorrelationId&quot;: &quot;08b6d829-86f2-42cb-be6b-6a7e57839ea9&quot;,
    &quot;DeviceUuid&quot;: &quot;${__P(uem.device.uuid)}&quot;,
    &quot;Id&quot;: &quot;5dbd7c8f-47e3-45a0-9bd5-0b44e21edfd0&quot;,
    &quot;PartitionKey&quot;: &quot;7c34b902-0e5f-4863-bd66-d53bb84ddc8e&quot;,
    &quot;resources&quot;: [],
    &quot;TenantUuid&quot;: &quot;${__P(uem.server.tenantuuid)}&quot;,
    &quot;Timestamp&quot;: &quot;2021-10-27T20:07:58.886388+00:00&quot;
  }</stringProp>
          <stringProp name="kafkaMessageKey">${__P(uem.device.uuid)}</stringProp>
          <stringProp name="kafkaTopic">${__P(kafka.topic.name)}</stringProp>
          <collectionProp name="messageHeaders"/>
          <stringProp name="partitionString"></stringProp>
          <stringProp name="TestPlan.comments">Kafka message to publish. DeviceID and TenentId are read from jmeter.properties.</stringProp>
        </com.di.jmeter.kafka.sampler.KafkaProducerSampler>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
